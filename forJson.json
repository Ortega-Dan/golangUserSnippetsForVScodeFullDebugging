{
	// Place your snippets for json here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"golangCLIlaunch": {
		"prefix": "launch",
		"body": [
			"//Read input by importing: github.com/Ortega-Dan/golang-stdin/stdin\n{\"version\": \"0.2.0\",\"configurations\": [{\"name\": \"Connect to server\",\"type\": \"go\",\"request\": \"attach\",\"preLaunchTask\": \"delve\",\"mode\": \"remote\",\"remotePath\": \"\\${workspaceFolder\\}\",\"port\": 23456,\"host\": \"127.0.0.1\",\"cwd\": \"\\${workspaceFolder\\}\"}]}"
		],
		"description": "Golang Launcher"
	},
	"golangCLItasks": {
		"prefix": "tasks",
		"body": [
			"{\"version\": \"2.0.0\",\"tasks\": [{\"label\": \"delve\",\"type\": \"shell\",\"command\": \"dlv debug --headless --listen=:23456 --api-version=2 \\\"\\${workspaceFolder\\}\\\"\",\"isBackground\": true,\"presentation\": {\"focus\": true,\"panel\": \"dedicated\",\"clear\": false},\"group\": {\"kind\": \"build\",\"isDefault\": true},\"problemMatcher\": {\"pattern\": {\"regexp\": \"\"},\"background\": {\"activeOnStart\": true,\"beginsPattern\": {\"regexp\": \".*\"},\"endsPattern\": {\"regexp\": \".*server listening.*\"}}}}]}"
		],
		"description": "Golang Tasks"
	}
}
