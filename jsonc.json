{
	// Place your snippets for jsonc here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"golangCLIlaunch": {
		"prefix": "go-cli_launch.json",
		"body": [
			"//Read console input (STDIN) by importing: github.com/Ortega-Dan/golang-stdin/stdin",
			"//Catch panics by importing: github.com/Ortega-Dan/golang-panic-catcher/gpanic",
			"//Build most possible stripped and cgo static binaries with:",
			"//go build -ldflags \"-s -w -extldflags=-static\" -gcflags=-trimpath=x/y",
			"{",
			"\t\"version\": \"0.2.0\",",
			"\t\"configurations\": [",
			"\t\t{",
			"\t\t\t\"name\": \"Connect to server\",",
			"\t\t\t\"type\": \"go\",",
			"\t\t\t\"request\": \"attach\",",
			"\t\t\t\"preLaunchTask\": \"delve\",",
			"\t\t\t\"mode\": \"remote\",",
			"\t\t\t\"remotePath\": \"\\${workspaceFolder\\}\",",
			"\t\t\t\"port\": 23456,",
			"\t\t\t\"host\": \"127.0.0.1\",",
			"\t\t\t\"cwd\": \"\\${workspaceFolder\\}\",",
			"\t\t\t\"internalConsoleOptions\": \"neverOpen\"",
			"\t\t}",
			"\t]",
			"}"
		],
		"description": "Golang Terminal Launcher"
	},
	"golangCLItasks": {
		"prefix": "go-cli_tasks.json",
		"body": [
			"{",
			"\t\"version\": \"2.0.0\",",
			"\t\"tasks\": [",
			"\t\t{",
			"\t\t\t\"label\": \"delve\",",
			"\t\t\t\"type\": \"shell\",",
			"\t\t\t\"command\": \"dlv debug --headless --listen=:23456 --api-version=2 \\\"\\${workspaceFolder\\}\\\"\",",
			"\t\t\t\"isBackground\": true,",
			"\t\t\t\"presentation\": {",
			"\t\t\t\t\"focus\": true,",
			"\t\t\t\t\"panel\": \"dedicated\",",
			"\t\t\t\t\"clear\": true",
			"\t\t\t},",
			"\t\t\t\"group\": {",
			"\t\t\t\t\"kind\": \"build\",",
			"\t\t\t\t\"isDefault\": true",
			"\t\t\t},",
			"\t\t\t\"problemMatcher\": {",
			"\t\t\t\t\"pattern\": {",
			"\t\t\t\t\t\"regexp\": \"\"",
			"\t\t\t\t},",
			"\t\t\t\t\"background\": {",
			"\t\t\t\t\t\"activeOnStart\": true,",
			"\t\t\t\t\t\"beginsPattern\": {",
			"\t\t\t\t\t\t\"regexp\": \".*\"",
			"\t\t\t\t\t},",
			"\t\t\t\t\t\"endsPattern\": {",
			"\t\t\t\t\t\t\"regexp\": \".*server listening.*\"",
			"\t\t\t\t\t}",
			"\t\t\t\t}",
			"\t\t\t}",
			"\t\t}",
			"\t]",
			"}"
		],
		"description": "Golang Terminal Tasks"
	},
	"golangBasicLauncher": {
		"prefix": "go-improved-basic-launcher_launch.json",
		"body": "{\"version\": \"0.2.0\",\"configurations\": [{\"name\": \"Launch Package\",\"type\": \"go\",\"request\": \"launch\",\"mode\": \"auto\",\"program\": \"\\${workspaceFolder}\",\"internalConsoleOptions\": \"openOnSessionStart\"}]}",
		"description": "Golang Improved Basic Launcher"
	},
	"golangTerminateOnSaveBasic": {
		"prefix": "go-save-terminate-basic_settings.json",
		"body": "// DISCLAIMER: This command only works on Linux for now (possibly on mac)\n// For this to work install the following vscode extension: wk-j.save-and-run\n// And place this config on .vscode/settings.json\n{\"saveAndRun\": {\"commands\": [{\"match\": \".*\",\n// WARNING: BASIC config. Works with both CLI and BasicImproved launchers, but doesn't differentiate between more than one vscode golang debugging workspaces (saving one might terminate the other)\n// For best functionality use advanced save-terminator with CLI launch.json and tasks.json\n\"cmd\": \"kill $(ps aux|grep dlv|awk '{print \\$2}'|head -n 1) && kill $(ps aux|grep ELECTRON_RUN_AS_NODE|grep golang|awk '{print \\$2}'|head -n 1) && kill $(ps aux|grep __debug_bin|awk '{print \\$2}'|head -n 1)\",\"silent\": true}]}}",
		"description": "(Basic) Golang Terminate Debugging Session on Code Saving"
	},
	"golangTerminateOnSaveAdvanced": {
		"prefix": "go-save-terminate-advanced_settings.json",
		"body": "// DISCLAIMER: This command only works on Linux for now (possibly on mac)\n// For this to work install the following vscode extension: wk-j.save-and-run\n// And place this config on .vscode/settings.json\n{\"saveAndRun\": {\"commands\": [{\"match\": \".*\",\n// ADVANCED config ONLY works with CLI configs for launch.json and tasks.json\n\"cmd\": \"tempo=$(ps auxe|grep dlv|grep \\\"\\${workspaceFolder}\\\"|head -n 1) && kill $(echo \\$tempo |awk '{print \\$2}') && toSearch=$(echo \\$tempo |awk -F GIO_LAUNCHED_DESKTOP_FILE_PID= '{print \\$2}'|awk '{print \\$1}') && kill $(ps auxe|grep env.ELECTRON_RUN_AS_NODE|grep golang|grep danort|grep \\$toSearch|awk '{print \\$2}'|head -n 1)\",\"silent\": true}]}}",
		"description": "(Advanced [GolangCLI Only]) Golang Terminate Debugging Session on Code Saving"
	}
}
